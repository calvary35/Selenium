                Selenium Class03

Locators:


Xpath: Most versatile locator that we have
    1.Absolute
    2.Relative

Absolute Xpath:
                starts with starting node html and then you proceed in the hierarchy

Example:
<html>
    <head>
        <title>My Web</title>
    </head>
    <body>
        <button>Press ME</button>
 		<input> text</input>
        <div>
 			<input>box</input>
 		</div>
 		<div>
            <input>box</input>
        </div>
    </body>
</html>

    Reasons not used often:
    1. too long, complicated
    2. If there is any addition in the hierarchy the path isn't valid any more




Relative Xpath:

Syntax:
//tagname[@attribute= 'attribute value']

get me the 'tagname' which has an attribute whose value is 'attribute value'

Example:
desired html <input id="box", class ="white"> box</input>

xpath:
//input[@id='box']

get me the tag "input" which has an attribute "id" whose value is "box"


2.-----Xpath to identify by text----------
//tagname[text() = 'text value']

get me the tagname which has text that is "text value"

example:
//a[text()='Forgotten password?']

get the tag which has a text that is "forgot password?"



3.----Xpath to identify by contains Method
//tagname[contains(@attriute, 'partial attribute value')]

Example:
//button[contains(@type, 'sub')]
get me that tag button which has the attribute and the attribute value contain "sub"

get me the tag name which has the attribute and the attribute value contains "the partial value"

use cases:
1.long attribute value
2. some part is dynamic of the attribute value  id="textBoxhighlighted123" we can simply skip the part that is dynamic

****for text*******
//tagname[contains(text(), 'partial text value')]

Example:
//a[contains(text(),'Forgot')]

get me the tag button which has the text and the text value contains "Forgot"


4.----Xpath to identify by starts with--------
Syntax:
//tagname[starts-with(@attribute, 'partial starting attribute value')]

Example:
//input[starts-with(@name, 'pa')]



